- name: install dependency package
  yum: name={{ dependency_packages }} state=installed
- name: copy and unzip hadoop
  #unarchive module owner and group only effect on directory.
  unarchive: src={{ hadoop_package_name }} dest=/opt/bigdata/
- name: create hadoop logs directory
  file: dest={{ hadoop_data_dir }}/logs mode=0775 state=directory
- name: change {{ hadoop_version }} directory owner and group
  #recurse=yes make all files in a directory changed.
  file: path={{ hadoop_home }} owner=root group=root recurse=yes
- name: set hadoop env
  lineinfile: dest={{ env_file }} insertafter="{{ item.position }}" line="{{ item.value }}" state=present
  with_items:
    - {position: EOF, value: "# Hadoop environment"}
    - {position: EOF, value: "export HADOOP_HOME={{ hadoop_home }}"}
    - {position: EOF, value: "export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin"}
- name: enforce env
  shell: source {{env_file}}
- name: install configuration file hadoop-env.sh.j2 for hadoop
  template: src=hadoop-env.sh.j2 dest={{ hadoop_home }}/etc/hadoop/hadoop-env.sh owner=root group=root
- name: install configuration file core-site.xml.j2 for hadoop
  template: src=core-site.xml.j2 dest={{ hadoop_home }}/etc/hadoop/core-site.xml owner=root group=root
- name: install configuration file hdfs-site.xml.j2 for hadoop
  template: src=hdfs-site.xml.j2 dest={{ hadoop_home }}/etc/hadoop/hdfs-site.xml owner=root group=root
- name: install configuration file mapred-site.xml.j2 for hadoop
  template: src=mapred-site.xml.j2 dest={{ hadoop_home }}/etc/hadoop/mapred-site.xml owner=root group=root
- name: install configuration file yarn-site.xml.j2 for hadoop
  template: src=yarn-site.xml.j2 dest={{ hadoop_home }}/etc/hadoop/yarn-site.xml owner=root group=root
- name: install configuration file slaves.j2 for hadoop
  template: src=slaves.j2 dest={{ hadoop_home }}/etc/hadoop/slaves owner=root group=root
- name: install configuration file hadoop-daemon.sh.j2 for hadoop
  template: src=hadoop-daemon.sh.j2 dest={{ hadoop_home }}/sbin/hadoop-daemon.sh owner=root group=root
- name: install configuration file yarn-daemon.sh.j2 for hadoop
  template: src=yarn-daemon.sh.j2 dest={{ hadoop_home }}/sbin/yarn-daemon.sh owner=root group=root
# make sure zookeeper started, and then start hadoop.
- name: start zookeeper
  shell: source {{ env_file }} && nohup {{ zk_home }}/bin/zkServer.sh start 2>&1 &
  when: zk_server == "true"
# stop and start journalnode
- name: stop journalnode
  shell: source {{ env_file }} && {{ hadoop_home }}/sbin/hadoop-daemon.sh stop journalnode
  when: datanode == "true"
- name: start journalnode
  shell: source {{ env_file }} && {{ hadoop_home }}/sbin/hadoop-daemon.sh start journalnode
  when: datanode == "true"
# format namenode
- name: format active namenode hdfs
  shell: source {{ env_file }} && {{ hadoop_home }}/bin/hdfs namenode -format
  when: first_install == "true" and namenode_active == "true"
- name: start active namenode hdfs
  shell: source {{ env_file }} && {{ hadoop_home }}/sbin/hadoop-daemon.sh start namenode
  when: first_install == "true" and namenode_active == "true"
- name: format standby namenode hdfs
  shell: source {{ env_file }} && {{ hadoop_home }}/bin/hdfs namenode -bootstrapStandby
  when: first_install == "true" and namenode_standby == "true"
- name: stop active namenode hdfs
  shell: source {{ env_file }} && {{ hadoop_home }}/sbin/hadoop-daemon.sh stop namenode
  when: first_install == "true" and namenode_active == "true"
# format ZKFC
- name: format ZKFC
  shell: source {{ env_file }} && {{ hadoop_home }}/bin/hdfs zkfc -formatZK
  when: first_install == "true" and namenode_active == "true"
# stop hadoop cluster
- name: stop namenode
  shell: source {{ env_file }} && {{ hadoop_home }}/sbin/stop-dfs.sh
  when: namenode_active == "true"
  tags:
    - stop
- name: stop yarn
  shell: source {{ env_file }} && {{ hadoop_home }}/sbin/stop-yarn.sh
  when: namenode_active == "true"
  tags:
    - stop
- name: stop standby rm
  shell: source {{ env_file }} && {{ hadoop_home }}/sbin/yarn-daemon.sh stop resourcemanager
  when: namenode_standby == "true"
  tags:
    - stop
# start hadoop cluster
- name: start namenode
  shell: source {{ env_file }} && {{ hadoop_home }}/sbin/start-dfs.sh
  when: namenode_active == "true"
  tags:
    - start
- name: start yarn
  shell: source {{ env_file }} && {{ hadoop_home }}/sbin/start-yarn.sh
  when: namenode_active == "true"
  tags:
    - start
- name: start standby rm
  shell: source {{ env_file }} && {{ hadoop_home }}/sbin/yarn-daemon.sh start resourcemanager
  when: namenode_standby == "true"
  tags:
    - start
